package es.upm.dit.gsi.DrEwe.Rules;
 
import es.upm.dit.gsi.DrEwe.Beans.Event;
import es.upm.dit.gsi.DrEwe.Beans.LightEvent;
import es.upm.dit.gsi.DrEwe.Beans.DniEvent;
import es.upm.dit.gsi.DrEwe.Beans.SPINEvent;
import es.upm.dit.gsi.DrEwe.Beans.CalendarEvent;
import es.upm.dit.gsi.DrEwe.Beans.User;
import  es.upm.dit.gsi.DrEwe.Utils.Bot;
import  es.upm.dit.gsi.DrEwe.Utils.Twitter;
import  es.upm.dit.gsi.DrEwe.Utils.UserFactory;
import  es.upm.dit.gsi.DrEwe.Utils.Email;
import es.upm.dit.gsi.DrEwe.SPIN.SPINModule;

import java.util.Calendar;

global es.upm.dit.gsi.DrEwe.SPIN.SPINModule spinModule;
 
declare Event
	@role(event)
end
declare LightEvent
	@role(event)
end
declare DniEvent
	@role(event)

end

declare CalendarEvent
	@role(event)
	@timestamp(droolsTimeStamp)
	@duration(droolsDuration)
end
 
 
rule "Event Inserted"
	when
		$newEvent: Event() from entry-point entrada
		
	then
		System.out.println("New Event received from: "+$newEvent.getSource() );
end
/*
rule "Light On" 
	when 
		$newEvent0: LightEvent(value<1000) from entry-point entrada 

	then 
		System.out.println("Light on"); 
		insert(new Event("light_on"));
end
rule "Light Off"
	when
		$newEvent0: LightEvent(value>1000) from entry-point entrada
	then
		System.out.println("Light off"); 
		insert(new Event("light_off"));
end
rule "Bot-Luz"
	when 
		$newEvent: Event(source=="light_off") 
		$newEventOff: Event(source=="light_on", this after[0s,10s] $newEvent) 
	then
		System.out.println("Rule bot-luz triggered");
        botFunction("Luz encendida");
		
end 

rule "Dni"
	when
		$newDniEvent: DniEvent() from entry-point entrada
	then
		botFunction("Bienvenido al gsi "+$newDniEvent.getName());
		System.out.println("Rule dni triggered by: "+$newDniEvent.getName());
		
end
rule "Reunion"
	when
		$newDniEvento: DniEvent() from entry-point entrada
		$newDniEventOther: DniEvent(this after[ 1s,10s ] $newDniEvento ) from entry-point entrada
	then
		botFunction("Reunion: "+$newDniEvento.getName()+" y "+$newDniEventOther.getName());
		System.out.println("Rule Reuni—n triggered by: "+$newDniEvento.getName()+" y "+$newDniEventOther.getName());
end
	
rule "SPINRule"
	
	when 
		$newEvent: SPINEvent() from entry-point entrada
		
	then
		System.out.println("SPIN rule triggered");
		spinModule.insertEvent(new SPINEvent($newEvent.getTitle(),$newEvent.getDescription()));
		spinModule.runInferences();
		spinModule.checkActions();
end
*/
rule "Use case reunion 2 people"
	when
		$newEventReunion: CalendarEvent() from entry-point entrada
		$newEventDni : DniEvent(this during $newEventReunion) from entry-point entrada
		$newEventDni2: DniEvent(this after[ 1s,20m ] $newEventDni ) from entry-point entrada

		eval(checkAttendees($newEventReunion,$newEventDni,$newEventDni2))
		
	then
		botFunction("Reunion lista para empezar");
		System.out.println("Use case rule triggered**************************************");
end

		
rule "Calendar timestamp"
	when
		$newEventReunion: CalendarEvent() from entry-point entrada
	then
		System.out.println("calendar start:"+$newEventReunion.getDroolsTimeStamp().toString());
end

rule "Dni timestamp"
	when
		$newDniEvent: DniEvent() from entry-point entrada
	then
		
		System.out.println("Dni timestamp: "+$newDniEvent.getTimeStamp().getTime().toString());
		
end

function boolean checkAttendees(CalendarEvent calendarEvent, DniEvent dniEvent1, DniEvent dniEvent2){
	boolean [] hasPassed={false,false};
	String[] attendees=calendarEvent.getAttendees();
	UserFactory userFactory=new UserFactory();
	User user1=userFactory.getUser(dniEvent1.getName());
	User user2=userFactory.getUser(dniEvent2.getName());
	
	
	if(attendees[0].equals(user1.getEmail())||attendees[1].equals(user1.getEmail())){
		hasPassed[0]=true;			
	}
	if(attendees[0].equals(user2.getEmail())||attendees[1].equals(user2.getEmail())){
		hasPassed[1]=true;			
	}
	
	
	return (hasPassed[0]&&hasPassed[1]);
}
function void botFunction(String message){
		Bot bot = new Bot();
		bot.send(message);
}

function void twitterFunction(String message){
	Twitter twitter = new Twitter();
	twitter.send(message);
}
function void emailFunction(String text,String[] to,String subject){
	Email email = new Email();
	email.send(text,to,subject);
}
